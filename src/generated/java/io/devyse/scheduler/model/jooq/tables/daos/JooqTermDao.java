/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables.daos;


import io.devyse.scheduler.model.TermDao;
import io.devyse.scheduler.model.jooq.tables.Term;
import io.devyse.scheduler.model.jooq.tables.pojos.JooqTerm;
import io.devyse.scheduler.model.jooq.tables.records.TermRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqTermDao extends DAOImpl<TermRecord, JooqTerm, Integer> implements TermDao {

	/**
	 * Create a new JooqTermDao without any configuration
	 */
	public JooqTermDao() {
		super(Term.TERM, JooqTerm.class);
	}

	/**
	 * Create a new JooqTermDao with an attached configuration
	 */
	public JooqTermDao(Configuration configuration) {
		super(Term.TERM, JooqTerm.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(JooqTerm object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public List<JooqTerm> fetchById(Integer... values) {
		return fetch(Term.TERM.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public JooqTerm fetchOneById(Integer value) {
		return fetchOne(Term.TERM.ID, value);
	}

	/**
	 * Fetch records that have <code>UNIVERSITY_ID IN (values)</code>
	 */
	public List<JooqTerm> fetchByUniversityId(Integer... values) {
		return fetch(Term.TERM.UNIVERSITY_ID, values);
	}

	/**
	 * Fetch records that have <code>NAME IN (values)</code>
	 */
	public List<JooqTerm> fetchByName(String... values) {
		return fetch(Term.TERM.NAME, values);
	}

	/**
	 * Fetch records that have <code>TERM_IDENTIFIER IN (values)</code>
	 */
	public List<JooqTerm> fetchByTermIdentifier(String... values) {
		return fetch(Term.TERM.TERM_IDENTIFIER, values);
	}
}
