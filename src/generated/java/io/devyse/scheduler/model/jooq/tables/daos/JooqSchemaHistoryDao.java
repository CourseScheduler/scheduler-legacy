/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables.daos;


import io.devyse.scheduler.model.jooq.tables.SchemaHistory;
import io.devyse.scheduler.model.jooq.tables.pojos.JooqSchemaHistory;
import io.devyse.scheduler.model.jooq.tables.records.SchemaHistoryRecord;

import java.sql.Timestamp;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqSchemaHistoryDao extends DAOImpl<SchemaHistoryRecord, JooqSchemaHistory, String> {

	/**
	 * Create a new JooqSchemaHistoryDao without any configuration
	 */
	public JooqSchemaHistoryDao() {
		super(SchemaHistory.SCHEMA_HISTORY, JooqSchemaHistory.class);
	}

	/**
	 * Create a new JooqSchemaHistoryDao with an attached configuration
	 */
	public JooqSchemaHistoryDao(Configuration configuration) {
		super(SchemaHistory.SCHEMA_HISTORY, JooqSchemaHistory.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected String getId(JooqSchemaHistory object) {
		return object.getVersion();
	}

	/**
	 * Fetch records that have <code>version_rank IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByVersionRank(Integer... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.VERSION_RANK, values);
	}

	/**
	 * Fetch records that have <code>installed_rank IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByInstalledRank(Integer... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.INSTALLED_RANK, values);
	}

	/**
	 * Fetch records that have <code>version IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByVersion(String... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.VERSION, values);
	}

	/**
	 * Fetch a unique record that has <code>version = value</code>
	 */
	public JooqSchemaHistory fetchOneByVersion(String value) {
		return fetchOne(SchemaHistory.SCHEMA_HISTORY.VERSION, value);
	}

	/**
	 * Fetch records that have <code>description IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByDescription(String... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.DESCRIPTION, values);
	}

	/**
	 * Fetch records that have <code>type IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByType(String... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.TYPE, values);
	}

	/**
	 * Fetch records that have <code>script IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByScript(String... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.SCRIPT, values);
	}

	/**
	 * Fetch records that have <code>checksum IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByChecksum(Integer... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.CHECKSUM, values);
	}

	/**
	 * Fetch records that have <code>installed_by IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByInstalledBy(String... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.INSTALLED_BY, values);
	}

	/**
	 * Fetch records that have <code>installed_on IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByInstalledOn(Timestamp... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.INSTALLED_ON, values);
	}

	/**
	 * Fetch records that have <code>execution_time IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchByExecutionTime(Integer... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.EXECUTION_TIME, values);
	}

	/**
	 * Fetch records that have <code>success IN (values)</code>
	 */
	public List<JooqSchemaHistory> fetchBySuccess(Boolean... values) {
		return fetch(SchemaHistory.SCHEMA_HISTORY.SUCCESS, values);
	}
}
