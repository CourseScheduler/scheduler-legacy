/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables;


import io.devyse.scheduler.model.jooq.App;
import io.devyse.scheduler.model.jooq.Keys;
import io.devyse.scheduler.model.jooq.tables.records.InstructorRatingRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class InstructorRating extends TableImpl<InstructorRatingRecord> {

	private static final long serialVersionUID = -1490990633;

	/**
	 * The reference instance of <code>APP.INSTRUCTOR_RATING</code>
	 */
	public static final InstructorRating INSTRUCTOR_RATING = new InstructorRating();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<InstructorRatingRecord> getRecordType() {
		return InstructorRatingRecord.class;
	}

	/**
	 * The column <code>APP.INSTRUCTOR_RATING.ID</code>.
	 */
	public final TableField<InstructorRatingRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>APP.INSTRUCTOR_RATING.INSTRUCTOR_ID</code>.
	 */
	public final TableField<InstructorRatingRecord, Integer> INSTRUCTOR_ID = createField("INSTRUCTOR_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>APP.INSTRUCTOR_RATING.RATING</code>.
	 */
	public final TableField<InstructorRatingRecord, Double> RATING = createField("RATING", org.jooq.impl.SQLDataType.DOUBLE, this, "");

	/**
	 * The column <code>APP.INSTRUCTOR_RATING.DESCRIPTION</code>.
	 */
	public final TableField<InstructorRatingRecord, String> DESCRIPTION = createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * Create a <code>APP.INSTRUCTOR_RATING</code> table reference
	 */
	public InstructorRating() {
		this("INSTRUCTOR_RATING", null);
	}

	/**
	 * Create an aliased <code>APP.INSTRUCTOR_RATING</code> table reference
	 */
	public InstructorRating(String alias) {
		this(alias, INSTRUCTOR_RATING);
	}

	private InstructorRating(String alias, Table<InstructorRatingRecord> aliased) {
		this(alias, aliased, null);
	}

	private InstructorRating(String alias, Table<InstructorRatingRecord> aliased, Field<?>[] parameters) {
		super(alias, App.APP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<InstructorRatingRecord, Integer> getIdentity() {
		return Keys.IDENTITY_INSTRUCTOR_RATING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<InstructorRatingRecord> getPrimaryKey() {
		return Keys.INSTRUCTOR_RATING_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<InstructorRatingRecord>> getKeys() {
		return Arrays.<UniqueKey<InstructorRatingRecord>>asList(Keys.INSTRUCTOR_RATING_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<InstructorRatingRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<InstructorRatingRecord, ?>>asList(Keys.INSTRUCTOR_RATING_FKEY_INSTRUCTOR_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public InstructorRating as(String alias) {
		return new InstructorRating(alias, this);
	}

	/**
	 * Rename this table
	 */
	public InstructorRating rename(String name) {
		return new InstructorRating(name, null);
	}
}
