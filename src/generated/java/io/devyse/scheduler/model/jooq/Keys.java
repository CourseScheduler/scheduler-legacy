/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq;


import io.devyse.scheduler.model.jooq.tables.DateTimeBlock;
import io.devyse.scheduler.model.jooq.tables.Instructor;
import io.devyse.scheduler.model.jooq.tables.InstructorRating;
import io.devyse.scheduler.model.jooq.tables.Meeting;
import io.devyse.scheduler.model.jooq.tables.MeetingInstructor;
import io.devyse.scheduler.model.jooq.tables.SchemaHistory;
import io.devyse.scheduler.model.jooq.tables.Section;
import io.devyse.scheduler.model.jooq.tables.Term;
import io.devyse.scheduler.model.jooq.tables.TermDataSet;
import io.devyse.scheduler.model.jooq.tables.University;
import io.devyse.scheduler.model.jooq.tables.Version;
import io.devyse.scheduler.model.jooq.tables.records.DateTimeBlockRecord;
import io.devyse.scheduler.model.jooq.tables.records.InstructorRatingRecord;
import io.devyse.scheduler.model.jooq.tables.records.InstructorRecord;
import io.devyse.scheduler.model.jooq.tables.records.MeetingInstructorRecord;
import io.devyse.scheduler.model.jooq.tables.records.MeetingRecord;
import io.devyse.scheduler.model.jooq.tables.records.SchemaHistoryRecord;
import io.devyse.scheduler.model.jooq.tables.records.SectionRecord;
import io.devyse.scheduler.model.jooq.tables.records.TermDataSetRecord;
import io.devyse.scheduler.model.jooq.tables.records.TermRecord;
import io.devyse.scheduler.model.jooq.tables.records.UniversityRecord;
import io.devyse.scheduler.model.jooq.tables.records.VersionRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>APP</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<DateTimeBlockRecord, Integer> IDENTITY_DATE_TIME_BLOCK = Identities0.IDENTITY_DATE_TIME_BLOCK;
	public static final Identity<InstructorRecord, Integer> IDENTITY_INSTRUCTOR = Identities0.IDENTITY_INSTRUCTOR;
	public static final Identity<InstructorRatingRecord, Integer> IDENTITY_INSTRUCTOR_RATING = Identities0.IDENTITY_INSTRUCTOR_RATING;
	public static final Identity<MeetingRecord, Integer> IDENTITY_MEETING = Identities0.IDENTITY_MEETING;
	public static final Identity<MeetingInstructorRecord, Integer> IDENTITY_MEETING_INSTRUCTOR = Identities0.IDENTITY_MEETING_INSTRUCTOR;
	public static final Identity<SectionRecord, Integer> IDENTITY_SECTION = Identities0.IDENTITY_SECTION;
	public static final Identity<TermRecord, Integer> IDENTITY_TERM = Identities0.IDENTITY_TERM;
	public static final Identity<TermDataSetRecord, Integer> IDENTITY_TERM_DATA_SET = Identities0.IDENTITY_TERM_DATA_SET;
	public static final Identity<UniversityRecord, Integer> IDENTITY_UNIVERSITY = Identities0.IDENTITY_UNIVERSITY;
	public static final Identity<VersionRecord, Integer> IDENTITY_VERSION = Identities0.IDENTITY_VERSION;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<DateTimeBlockRecord> DATE_TIME_BLOCK_PKEY = UniqueKeys0.DATE_TIME_BLOCK_PKEY;
	public static final UniqueKey<InstructorRecord> INSTRUCTOR_PKEY = UniqueKeys0.INSTRUCTOR_PKEY;
	public static final UniqueKey<InstructorRatingRecord> INSTRUCTOR_RATING_PKEY = UniqueKeys0.INSTRUCTOR_RATING_PKEY;
	public static final UniqueKey<MeetingRecord> MEETING_PKEY = UniqueKeys0.MEETING_PKEY;
	public static final UniqueKey<MeetingInstructorRecord> MEETING_INSTRUCTOR_PKEY = UniqueKeys0.MEETING_INSTRUCTOR_PKEY;
	public static final UniqueKey<SectionRecord> SECTION_PKEY = UniqueKeys0.SECTION_PKEY;
	public static final UniqueKey<TermRecord> TERM_PKEY = UniqueKeys0.TERM_PKEY;
	public static final UniqueKey<TermDataSetRecord> TERM_DATA_SET_PKEY = UniqueKeys0.TERM_DATA_SET_PKEY;
	public static final UniqueKey<UniversityRecord> UNIVERSITY_PKEY = UniqueKeys0.UNIVERSITY_PKEY;
	public static final UniqueKey<VersionRecord> VERSION_PKEY = UniqueKeys0.VERSION_PKEY;
	public static final UniqueKey<SchemaHistoryRecord> SCHEMA_HISTORY_PK = UniqueKeys0.SCHEMA_HISTORY_PK;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------

	public static final ForeignKey<InstructorRecord, TermDataSetRecord> INSTRUCTOR_FKEY_TERM_DATA_SET_ID = ForeignKeys0.INSTRUCTOR_FKEY_TERM_DATA_SET_ID;
	public static final ForeignKey<InstructorRatingRecord, InstructorRecord> INSTRUCTOR_RATING_FKEY_INSTRUCTOR_ID = ForeignKeys0.INSTRUCTOR_RATING_FKEY_INSTRUCTOR_ID;
	public static final ForeignKey<MeetingRecord, DateTimeBlockRecord> MEETING_FKEY_DATE_TIME_BLOCK_ID = ForeignKeys0.MEETING_FKEY_DATE_TIME_BLOCK_ID;
	public static final ForeignKey<MeetingRecord, SectionRecord> MEETING_FKEY_SECTION_ID = ForeignKeys0.MEETING_FKEY_SECTION_ID;
	public static final ForeignKey<MeetingInstructorRecord, MeetingRecord> MEETING_INSTRUCTOR_FKEY_MEETING_ID = ForeignKeys0.MEETING_INSTRUCTOR_FKEY_MEETING_ID;
	public static final ForeignKey<MeetingInstructorRecord, InstructorRecord> MEETING_INSTRUCTOR_FKEY_INSTRUCTOR_ID = ForeignKeys0.MEETING_INSTRUCTOR_FKEY_INSTRUCTOR_ID;
	public static final ForeignKey<SectionRecord, TermDataSetRecord> SECTION_FKEY_TERM_DATA_SET_ID = ForeignKeys0.SECTION_FKEY_TERM_DATA_SET_ID;
	public static final ForeignKey<TermRecord, UniversityRecord> TERM_FKEY_UNIVERSITY_ID = ForeignKeys0.TERM_FKEY_UNIVERSITY_ID;
	public static final ForeignKey<TermDataSetRecord, TermRecord> TERM_DATA_SET_FKEY_TERM_ID = ForeignKeys0.TERM_DATA_SET_FKEY_TERM_ID;
	public static final ForeignKey<TermDataSetRecord, VersionRecord> TERM_DATA_SET_FKEY_VERSION_ID = ForeignKeys0.TERM_DATA_SET_FKEY_VERSION_ID;

	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<DateTimeBlockRecord, Integer> IDENTITY_DATE_TIME_BLOCK = createIdentity(DateTimeBlock.DATE_TIME_BLOCK, DateTimeBlock.DATE_TIME_BLOCK.ID);
		public static Identity<InstructorRecord, Integer> IDENTITY_INSTRUCTOR = createIdentity(Instructor.INSTRUCTOR, Instructor.INSTRUCTOR.ID);
		public static Identity<InstructorRatingRecord, Integer> IDENTITY_INSTRUCTOR_RATING = createIdentity(InstructorRating.INSTRUCTOR_RATING, InstructorRating.INSTRUCTOR_RATING.ID);
		public static Identity<MeetingRecord, Integer> IDENTITY_MEETING = createIdentity(Meeting.MEETING, Meeting.MEETING.ID);
		public static Identity<MeetingInstructorRecord, Integer> IDENTITY_MEETING_INSTRUCTOR = createIdentity(MeetingInstructor.MEETING_INSTRUCTOR, MeetingInstructor.MEETING_INSTRUCTOR.ID);
		public static Identity<SectionRecord, Integer> IDENTITY_SECTION = createIdentity(Section.SECTION, Section.SECTION.ID);
		public static Identity<TermRecord, Integer> IDENTITY_TERM = createIdentity(Term.TERM, Term.TERM.ID);
		public static Identity<TermDataSetRecord, Integer> IDENTITY_TERM_DATA_SET = createIdentity(TermDataSet.TERM_DATA_SET, TermDataSet.TERM_DATA_SET.ID);
		public static Identity<UniversityRecord, Integer> IDENTITY_UNIVERSITY = createIdentity(University.UNIVERSITY, University.UNIVERSITY.ID);
		public static Identity<VersionRecord, Integer> IDENTITY_VERSION = createIdentity(Version.VERSION, Version.VERSION.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<DateTimeBlockRecord> DATE_TIME_BLOCK_PKEY = createUniqueKey(DateTimeBlock.DATE_TIME_BLOCK, DateTimeBlock.DATE_TIME_BLOCK.ID);
		public static final UniqueKey<InstructorRecord> INSTRUCTOR_PKEY = createUniqueKey(Instructor.INSTRUCTOR, Instructor.INSTRUCTOR.ID);
		public static final UniqueKey<InstructorRatingRecord> INSTRUCTOR_RATING_PKEY = createUniqueKey(InstructorRating.INSTRUCTOR_RATING, InstructorRating.INSTRUCTOR_RATING.ID);
		public static final UniqueKey<MeetingRecord> MEETING_PKEY = createUniqueKey(Meeting.MEETING, Meeting.MEETING.ID);
		public static final UniqueKey<MeetingInstructorRecord> MEETING_INSTRUCTOR_PKEY = createUniqueKey(MeetingInstructor.MEETING_INSTRUCTOR, MeetingInstructor.MEETING_INSTRUCTOR.ID);
		public static final UniqueKey<SectionRecord> SECTION_PKEY = createUniqueKey(Section.SECTION, Section.SECTION.ID);
		public static final UniqueKey<TermRecord> TERM_PKEY = createUniqueKey(Term.TERM, Term.TERM.ID);
		public static final UniqueKey<TermDataSetRecord> TERM_DATA_SET_PKEY = createUniqueKey(TermDataSet.TERM_DATA_SET, TermDataSet.TERM_DATA_SET.ID);
		public static final UniqueKey<UniversityRecord> UNIVERSITY_PKEY = createUniqueKey(University.UNIVERSITY, University.UNIVERSITY.ID);
		public static final UniqueKey<VersionRecord> VERSION_PKEY = createUniqueKey(Version.VERSION, Version.VERSION.ID);
		public static final UniqueKey<SchemaHistoryRecord> SCHEMA_HISTORY_PK = createUniqueKey(SchemaHistory.SCHEMA_HISTORY, SchemaHistory.SCHEMA_HISTORY.VERSION);
	}

	private static class ForeignKeys0 extends AbstractKeys {
		public static final ForeignKey<InstructorRecord, TermDataSetRecord> INSTRUCTOR_FKEY_TERM_DATA_SET_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.TERM_DATA_SET_PKEY, Instructor.INSTRUCTOR, Instructor.INSTRUCTOR.TERM_DATA_SET_ID);
		public static final ForeignKey<InstructorRatingRecord, InstructorRecord> INSTRUCTOR_RATING_FKEY_INSTRUCTOR_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.INSTRUCTOR_PKEY, InstructorRating.INSTRUCTOR_RATING, InstructorRating.INSTRUCTOR_RATING.INSTRUCTOR_ID);
		public static final ForeignKey<MeetingRecord, DateTimeBlockRecord> MEETING_FKEY_DATE_TIME_BLOCK_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.DATE_TIME_BLOCK_PKEY, Meeting.MEETING, Meeting.MEETING.DATE_TIME_BLOCK_ID);
		public static final ForeignKey<MeetingRecord, SectionRecord> MEETING_FKEY_SECTION_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.SECTION_PKEY, Meeting.MEETING, Meeting.MEETING.SECTION_ID);
		public static final ForeignKey<MeetingInstructorRecord, MeetingRecord> MEETING_INSTRUCTOR_FKEY_MEETING_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.MEETING_PKEY, MeetingInstructor.MEETING_INSTRUCTOR, MeetingInstructor.MEETING_INSTRUCTOR.MEETING_ID);
		public static final ForeignKey<MeetingInstructorRecord, InstructorRecord> MEETING_INSTRUCTOR_FKEY_INSTRUCTOR_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.INSTRUCTOR_PKEY, MeetingInstructor.MEETING_INSTRUCTOR, MeetingInstructor.MEETING_INSTRUCTOR.INSTRUCTOR_ID);
		public static final ForeignKey<SectionRecord, TermDataSetRecord> SECTION_FKEY_TERM_DATA_SET_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.TERM_DATA_SET_PKEY, Section.SECTION, Section.SECTION.TERM_DATA_SET_ID);
		public static final ForeignKey<TermRecord, UniversityRecord> TERM_FKEY_UNIVERSITY_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.UNIVERSITY_PKEY, Term.TERM, Term.TERM.UNIVERSITY_ID);
		public static final ForeignKey<TermDataSetRecord, TermRecord> TERM_DATA_SET_FKEY_TERM_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.TERM_PKEY, TermDataSet.TERM_DATA_SET, TermDataSet.TERM_DATA_SET.TERM_ID);
		public static final ForeignKey<TermDataSetRecord, VersionRecord> TERM_DATA_SET_FKEY_VERSION_ID = createForeignKey(io.devyse.scheduler.model.jooq.Keys.VERSION_PKEY, TermDataSet.TERM_DATA_SET, TermDataSet.TERM_DATA_SET.VERSION_ID);
	}
}
