/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables.daos;


import io.devyse.scheduler.model.jooq.tables.MeetingInstructor;
import io.devyse.scheduler.model.jooq.tables.pojos.JooqMeetingInstructor;
import io.devyse.scheduler.model.jooq.tables.records.MeetingInstructorRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqMeetingInstructorDao extends DAOImpl<MeetingInstructorRecord, JooqMeetingInstructor, Integer> {

	/**
	 * Create a new JooqMeetingInstructorDao without any configuration
	 */
	public JooqMeetingInstructorDao() {
		super(MeetingInstructor.MEETING_INSTRUCTOR, JooqMeetingInstructor.class);
	}

	/**
	 * Create a new JooqMeetingInstructorDao with an attached configuration
	 */
	public JooqMeetingInstructorDao(Configuration configuration) {
		super(MeetingInstructor.MEETING_INSTRUCTOR, JooqMeetingInstructor.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(JooqMeetingInstructor object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public List<JooqMeetingInstructor> fetchById(Integer... values) {
		return fetch(MeetingInstructor.MEETING_INSTRUCTOR.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public JooqMeetingInstructor fetchOneById(Integer value) {
		return fetchOne(MeetingInstructor.MEETING_INSTRUCTOR.ID, value);
	}

	/**
	 * Fetch records that have <code>MEETING_ID IN (values)</code>
	 */
	public List<JooqMeetingInstructor> fetchByMeetingId(Integer... values) {
		return fetch(MeetingInstructor.MEETING_INSTRUCTOR.MEETING_ID, values);
	}

	/**
	 * Fetch records that have <code>INSTRUCTOR_ID IN (values)</code>
	 */
	public List<JooqMeetingInstructor> fetchByInstructorId(Integer... values) {
		return fetch(MeetingInstructor.MEETING_INSTRUCTOR.INSTRUCTOR_ID, values);
	}
}
