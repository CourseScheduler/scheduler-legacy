/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables;


import io.devyse.scheduler.model.jooq.App;
import io.devyse.scheduler.model.jooq.Keys;
import io.devyse.scheduler.model.jooq.tables.records.UniversityRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class University extends TableImpl<UniversityRecord> {

	private static final long serialVersionUID = -1904716677;

	/**
	 * The reference instance of <code>APP.UNIVERSITY</code>
	 */
	public static final University UNIVERSITY = new University();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<UniversityRecord> getRecordType() {
		return UniversityRecord.class;
	}

	/**
	 * The column <code>APP.UNIVERSITY.ID</code>.
	 */
	public final TableField<UniversityRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>APP.UNIVERSITY.NAME</code>.
	 */
	public final TableField<UniversityRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * Create a <code>APP.UNIVERSITY</code> table reference
	 */
	public University() {
		this("UNIVERSITY", null);
	}

	/**
	 * Create an aliased <code>APP.UNIVERSITY</code> table reference
	 */
	public University(String alias) {
		this(alias, UNIVERSITY);
	}

	private University(String alias, Table<UniversityRecord> aliased) {
		this(alias, aliased, null);
	}

	private University(String alias, Table<UniversityRecord> aliased, Field<?>[] parameters) {
		super(alias, App.APP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<UniversityRecord, Integer> getIdentity() {
		return Keys.IDENTITY_UNIVERSITY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<UniversityRecord> getPrimaryKey() {
		return Keys.UNIVERSITY_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<UniversityRecord>> getKeys() {
		return Arrays.<UniqueKey<UniversityRecord>>asList(Keys.UNIVERSITY_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public University as(String alias) {
		return new University(alias, this);
	}

	/**
	 * Rename this table
	 */
	public University rename(String name) {
		return new University(name, null);
	}
}
