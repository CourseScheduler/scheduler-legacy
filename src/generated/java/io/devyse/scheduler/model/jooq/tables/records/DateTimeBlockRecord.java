/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.1"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DateTimeBlockRecord extends org.jooq.impl.UpdatableRecordImpl<io.devyse.scheduler.model.jooq.tables.records.DateTimeBlockRecord> implements org.jooq.Record7<java.lang.Integer, java.time.DayOfWeek, java.time.LocalTime, java.time.LocalTime, java.time.ZoneOffset, java.time.LocalDate, java.time.LocalDate> {

	private static final long serialVersionUID = -1317102060;

	/**
	 * Setter for <code>APP.DATE_TIME_BLOCK.ID</code>.
	 */
	public void setId(java.lang.Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>APP.DATE_TIME_BLOCK.ID</code>.
	 */
	public java.lang.Integer getId() {
		return (java.lang.Integer) getValue(0);
	}

	/**
	 * Setter for <code>APP.DATE_TIME_BLOCK.DAY_OF_WEEK</code>.
	 */
	public void setDayOfWeek(java.time.DayOfWeek value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>APP.DATE_TIME_BLOCK.DAY_OF_WEEK</code>.
	 */
	public java.time.DayOfWeek getDayOfWeek() {
		return (java.time.DayOfWeek) getValue(1);
	}

	/**
	 * Setter for <code>APP.DATE_TIME_BLOCK.LOCAL_START_TIME</code>.
	 */
	public void setLocalStartTime(java.time.LocalTime value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>APP.DATE_TIME_BLOCK.LOCAL_START_TIME</code>.
	 */
	public java.time.LocalTime getLocalStartTime() {
		return (java.time.LocalTime) getValue(2);
	}

	/**
	 * Setter for <code>APP.DATE_TIME_BLOCK.LOCAL_END_TIME</code>.
	 */
	public void setLocalEndTime(java.time.LocalTime value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>APP.DATE_TIME_BLOCK.LOCAL_END_TIME</code>.
	 */
	public java.time.LocalTime getLocalEndTime() {
		return (java.time.LocalTime) getValue(3);
	}

	/**
	 * Setter for <code>APP.DATE_TIME_BLOCK.ZONE_OFFSET</code>.
	 */
	public void setZoneOffset(java.time.ZoneOffset value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>APP.DATE_TIME_BLOCK.ZONE_OFFSET</code>.
	 */
	public java.time.ZoneOffset getZoneOffset() {
		return (java.time.ZoneOffset) getValue(4);
	}

	/**
	 * Setter for <code>APP.DATE_TIME_BLOCK.START_DATE</code>.
	 */
	public void setStartDate(java.time.LocalDate value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>APP.DATE_TIME_BLOCK.START_DATE</code>.
	 */
	public java.time.LocalDate getStartDate() {
		return (java.time.LocalDate) getValue(5);
	}

	/**
	 * Setter for <code>APP.DATE_TIME_BLOCK.END_DATE</code>.
	 */
	public void setEndDate(java.time.LocalDate value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>APP.DATE_TIME_BLOCK.END_DATE</code>.
	 */
	public java.time.LocalDate getEndDate() {
		return (java.time.LocalDate) getValue(6);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.lang.Integer> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record7 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Integer, java.time.DayOfWeek, java.time.LocalTime, java.time.LocalTime, java.time.ZoneOffset, java.time.LocalDate, java.time.LocalDate> fieldsRow() {
		return (org.jooq.Row7) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row7<java.lang.Integer, java.time.DayOfWeek, java.time.LocalTime, java.time.LocalTime, java.time.ZoneOffset, java.time.LocalDate, java.time.LocalDate> valuesRow() {
		return (org.jooq.Row7) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.lang.Integer> field1() {
		return io.devyse.scheduler.model.jooq.tables.DateTimeBlock.DATE_TIME_BLOCK.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.time.DayOfWeek> field2() {
		return io.devyse.scheduler.model.jooq.tables.DateTimeBlock.DATE_TIME_BLOCK.DAY_OF_WEEK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.time.LocalTime> field3() {
		return io.devyse.scheduler.model.jooq.tables.DateTimeBlock.DATE_TIME_BLOCK.LOCAL_START_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.time.LocalTime> field4() {
		return io.devyse.scheduler.model.jooq.tables.DateTimeBlock.DATE_TIME_BLOCK.LOCAL_END_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.time.ZoneOffset> field5() {
		return io.devyse.scheduler.model.jooq.tables.DateTimeBlock.DATE_TIME_BLOCK.ZONE_OFFSET;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.time.LocalDate> field6() {
		return io.devyse.scheduler.model.jooq.tables.DateTimeBlock.DATE_TIME_BLOCK.START_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.time.LocalDate> field7() {
		return io.devyse.scheduler.model.jooq.tables.DateTimeBlock.DATE_TIME_BLOCK.END_DATE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.lang.Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.time.DayOfWeek value2() {
		return getDayOfWeek();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.time.LocalTime value3() {
		return getLocalStartTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.time.LocalTime value4() {
		return getLocalEndTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.time.ZoneOffset value5() {
		return getZoneOffset();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.time.LocalDate value6() {
		return getStartDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.time.LocalDate value7() {
		return getEndDate();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTimeBlockRecord value1(java.lang.Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTimeBlockRecord value2(java.time.DayOfWeek value) {
		setDayOfWeek(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTimeBlockRecord value3(java.time.LocalTime value) {
		setLocalStartTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTimeBlockRecord value4(java.time.LocalTime value) {
		setLocalEndTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTimeBlockRecord value5(java.time.ZoneOffset value) {
		setZoneOffset(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTimeBlockRecord value6(java.time.LocalDate value) {
		setStartDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTimeBlockRecord value7(java.time.LocalDate value) {
		setEndDate(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTimeBlockRecord values(java.lang.Integer value1, java.time.DayOfWeek value2, java.time.LocalTime value3, java.time.LocalTime value4, java.time.ZoneOffset value5, java.time.LocalDate value6, java.time.LocalDate value7) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached DateTimeBlockRecord
	 */
	public DateTimeBlockRecord() {
		super(io.devyse.scheduler.model.jooq.tables.DateTimeBlock.DATE_TIME_BLOCK);
	}

	/**
	 * Create a detached, initialised DateTimeBlockRecord
	 */
	public DateTimeBlockRecord(java.lang.Integer id, java.time.DayOfWeek dayOfWeek, java.time.LocalTime localStartTime, java.time.LocalTime localEndTime, java.time.ZoneOffset zoneOffset, java.time.LocalDate startDate, java.time.LocalDate endDate) {
		super(io.devyse.scheduler.model.jooq.tables.DateTimeBlock.DATE_TIME_BLOCK);

		setValue(0, id);
		setValue(1, dayOfWeek);
		setValue(2, localStartTime);
		setValue(3, localEndTime);
		setValue(4, zoneOffset);
		setValue(5, startDate);
		setValue(6, endDate);
	}
}
