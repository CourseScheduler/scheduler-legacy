/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables;


import io.devyse.scheduler.model.jooq.App;
import io.devyse.scheduler.model.jooq.Keys;
import io.devyse.scheduler.model.jooq.tables.records.SectionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Section extends TableImpl<SectionRecord> {

	private static final long serialVersionUID = -738077032;

	/**
	 * The reference instance of <code>APP.SECTION</code>
	 */
	public static final Section SECTION = new Section();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<SectionRecord> getRecordType() {
		return SectionRecord.class;
	}

	/**
	 * The column <code>APP.SECTION.ID</code>.
	 */
	public final TableField<SectionRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>APP.SECTION.CRN</code>.
	 */
	public final TableField<SectionRecord, String> CRN = createField("CRN", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.SECTION.COURSE_NUMBER</code>.
	 */
	public final TableField<SectionRecord, String> COURSE_NUMBER = createField("COURSE_NUMBER", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.SECTION.DESCRIPTION</code>.
	 */
	public final TableField<SectionRecord, String> DESCRIPTION = createField("DESCRIPTION", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.SECTION.NAME</code>.
	 */
	public final TableField<SectionRecord, String> NAME = createField("NAME", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.SECTION.SECTION_NUMBER</code>.
	 */
	public final TableField<SectionRecord, String> SECTION_NUMBER = createField("SECTION_NUMBER", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.SECTION.TERM_DATA_SET_ID</code>.
	 */
	public final TableField<SectionRecord, Integer> TERM_DATA_SET_ID = createField("TERM_DATA_SET_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>APP.SECTION</code> table reference
	 */
	public Section() {
		this("SECTION", null);
	}

	/**
	 * Create an aliased <code>APP.SECTION</code> table reference
	 */
	public Section(String alias) {
		this(alias, SECTION);
	}

	private Section(String alias, Table<SectionRecord> aliased) {
		this(alias, aliased, null);
	}

	private Section(String alias, Table<SectionRecord> aliased, Field<?>[] parameters) {
		super(alias, App.APP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<SectionRecord, Integer> getIdentity() {
		return Keys.IDENTITY_SECTION;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<SectionRecord> getPrimaryKey() {
		return Keys.SECTION_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<SectionRecord>> getKeys() {
		return Arrays.<UniqueKey<SectionRecord>>asList(Keys.SECTION_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<SectionRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<SectionRecord, ?>>asList(Keys.SECTION_FKEY_TERM_DATA_SET_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Section as(String alias) {
		return new Section(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Section rename(String name) {
		return new Section(name, null);
	}
}
