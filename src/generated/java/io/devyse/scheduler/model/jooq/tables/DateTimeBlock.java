/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables;


import io.devyse.scheduler.model.jooq.App;
import io.devyse.scheduler.model.jooq.Keys;
import io.devyse.scheduler.model.jooq.tables.records.DateTimeBlockRecord;
import io.devyse.util.jooq.DayOfWeekConverter;
import io.devyse.util.jooq.LocalDateConverter;
import io.devyse.util.jooq.LocalTimeConverter;
import io.devyse.util.jooq.ZoneOffsetConverter;

import java.time.DayOfWeek;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneOffset;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DateTimeBlock extends TableImpl<DateTimeBlockRecord> {

	private static final long serialVersionUID = 18710592;

	/**
	 * The reference instance of <code>APP.DATE_TIME_BLOCK</code>
	 */
	public static final DateTimeBlock DATE_TIME_BLOCK = new DateTimeBlock();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<DateTimeBlockRecord> getRecordType() {
		return DateTimeBlockRecord.class;
	}

	/**
	 * The column <code>APP.DATE_TIME_BLOCK.ID</code>.
	 */
	public final TableField<DateTimeBlockRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>APP.DATE_TIME_BLOCK.DAY_OF_WEEK</code>.
	 */
	public final TableField<DateTimeBlockRecord, DayOfWeek> DAY_OF_WEEK = createField("DAY_OF_WEEK", org.jooq.impl.SQLDataType.INTEGER.defaulted(true), this, "", new DayOfWeekConverter());

	/**
	 * The column <code>APP.DATE_TIME_BLOCK.LOCAL_START_TIME</code>.
	 */
	public final TableField<DateTimeBlockRecord, LocalTime> LOCAL_START_TIME = createField("LOCAL_START_TIME", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "", new LocalTimeConverter());

	/**
	 * The column <code>APP.DATE_TIME_BLOCK.LOCAL_END_TIME</code>.
	 */
	public final TableField<DateTimeBlockRecord, LocalTime> LOCAL_END_TIME = createField("LOCAL_END_TIME", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "", new LocalTimeConverter());

	/**
	 * The column <code>APP.DATE_TIME_BLOCK.ZONE_OFFSET</code>.
	 */
	public final TableField<DateTimeBlockRecord, ZoneOffset> ZONE_OFFSET = createField("ZONE_OFFSET", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "", new ZoneOffsetConverter());

	/**
	 * The column <code>APP.DATE_TIME_BLOCK.START_DATE</code>.
	 */
	public final TableField<DateTimeBlockRecord, LocalDate> START_DATE = createField("START_DATE", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "", new LocalDateConverter());

	/**
	 * The column <code>APP.DATE_TIME_BLOCK.END_DATE</code>.
	 */
	public final TableField<DateTimeBlockRecord, LocalDate> END_DATE = createField("END_DATE", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "", new LocalDateConverter());

	/**
	 * Create a <code>APP.DATE_TIME_BLOCK</code> table reference
	 */
	public DateTimeBlock() {
		this("DATE_TIME_BLOCK", null);
	}

	/**
	 * Create an aliased <code>APP.DATE_TIME_BLOCK</code> table reference
	 */
	public DateTimeBlock(String alias) {
		this(alias, DATE_TIME_BLOCK);
	}

	private DateTimeBlock(String alias, Table<DateTimeBlockRecord> aliased) {
		this(alias, aliased, null);
	}

	private DateTimeBlock(String alias, Table<DateTimeBlockRecord> aliased, Field<?>[] parameters) {
		super(alias, App.APP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<DateTimeBlockRecord, Integer> getIdentity() {
		return Keys.IDENTITY_DATE_TIME_BLOCK;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<DateTimeBlockRecord> getPrimaryKey() {
		return Keys.DATE_TIME_BLOCK_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<DateTimeBlockRecord>> getKeys() {
		return Arrays.<UniqueKey<DateTimeBlockRecord>>asList(Keys.DATE_TIME_BLOCK_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public DateTimeBlock as(String alias) {
		return new DateTimeBlock(alias, this);
	}

	/**
	 * Rename this table
	 */
	public DateTimeBlock rename(String name) {
		return new DateTimeBlock(name, null);
	}
}
