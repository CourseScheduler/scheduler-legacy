/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables.records;


import io.devyse.scheduler.model.jooq.tables.Version;

import java.time.OffsetDateTime;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class VersionRecord extends UpdatableRecordImpl<VersionRecord> implements Record3<Integer, OffsetDateTime, Boolean> {

	private static final long serialVersionUID = 1451396226;

	/**
	 * Setter for <code>APP.VERSION.ID</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>APP.VERSION.ID</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>APP.VERSION.RETRIEVAL_TIME</code>.
	 */
	public void setRetrievalTime(OffsetDateTime value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>APP.VERSION.RETRIEVAL_TIME</code>.
	 */
	public OffsetDateTime getRetrievalTime() {
		return (OffsetDateTime) getValue(1);
	}

	/**
	 * Setter for <code>APP.VERSION.COMPLETE</code>.
	 */
	public void setComplete(Boolean value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>APP.VERSION.COMPLETE</code>.
	 */
	public Boolean getComplete() {
		return (Boolean) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, OffsetDateTime, Boolean> fieldsRow() {
		return (Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row3<Integer, OffsetDateTime, Boolean> valuesRow() {
		return (Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Version.VERSION.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<OffsetDateTime> field2() {
		return Version.VERSION.RETRIEVAL_TIME;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Boolean> field3() {
		return Version.VERSION.COMPLETE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public OffsetDateTime value2() {
		return getRetrievalTime();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Boolean value3() {
		return getComplete();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VersionRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VersionRecord value2(OffsetDateTime value) {
		setRetrievalTime(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VersionRecord value3(Boolean value) {
		setComplete(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public VersionRecord values(Integer value1, OffsetDateTime value2, Boolean value3) {
		value1(value1);
		value2(value2);
		value3(value3);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached VersionRecord
	 */
	public VersionRecord() {
		super(Version.VERSION);
	}

	/**
	 * Create a detached, initialised VersionRecord
	 */
	public VersionRecord(Integer id, OffsetDateTime retrievalTime, Boolean complete) {
		super(Version.VERSION);

		setValue(0, id);
		setValue(1, retrievalTime);
		setValue(2, complete);
	}
}
