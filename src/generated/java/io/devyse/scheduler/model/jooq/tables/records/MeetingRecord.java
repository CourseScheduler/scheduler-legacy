/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables.records;


import io.devyse.scheduler.model.jooq.tables.Meeting;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MeetingRecord extends UpdatableRecordImpl<MeetingRecord> implements Record8<Integer, Integer, String, String, String, String, String, Integer> {

	private static final long serialVersionUID = -668274554;

	/**
	 * Setter for <code>APP.MEETING.ID</code>.
	 */
	public void setId(Integer value) {
		setValue(0, value);
	}

	/**
	 * Getter for <code>APP.MEETING.ID</code>.
	 */
	public Integer getId() {
		return (Integer) getValue(0);
	}

	/**
	 * Setter for <code>APP.MEETING.DATE_TIME_BLOCK_ID</code>.
	 */
	public void setDateTimeBlockId(Integer value) {
		setValue(1, value);
	}

	/**
	 * Getter for <code>APP.MEETING.DATE_TIME_BLOCK_ID</code>.
	 */
	public Integer getDateTimeBlockId() {
		return (Integer) getValue(1);
	}

	/**
	 * Setter for <code>APP.MEETING.CAMPUS</code>.
	 */
	public void setCampus(String value) {
		setValue(2, value);
	}

	/**
	 * Getter for <code>APP.MEETING.CAMPUS</code>.
	 */
	public String getCampus() {
		return (String) getValue(2);
	}

	/**
	 * Setter for <code>APP.MEETING.BUILDING</code>.
	 */
	public void setBuilding(String value) {
		setValue(3, value);
	}

	/**
	 * Getter for <code>APP.MEETING.BUILDING</code>.
	 */
	public String getBuilding() {
		return (String) getValue(3);
	}

	/**
	 * Setter for <code>APP.MEETING.ROOM</code>.
	 */
	public void setRoom(String value) {
		setValue(4, value);
	}

	/**
	 * Getter for <code>APP.MEETING.ROOM</code>.
	 */
	public String getRoom() {
		return (String) getValue(4);
	}

	/**
	 * Setter for <code>APP.MEETING.MEETING_TYPE</code>.
	 */
	public void setMeetingType(String value) {
		setValue(5, value);
	}

	/**
	 * Getter for <code>APP.MEETING.MEETING_TYPE</code>.
	 */
	public String getMeetingType() {
		return (String) getValue(5);
	}

	/**
	 * Setter for <code>APP.MEETING.SCHEDULE_TYPE</code>.
	 */
	public void setScheduleType(String value) {
		setValue(6, value);
	}

	/**
	 * Getter for <code>APP.MEETING.SCHEDULE_TYPE</code>.
	 */
	public String getScheduleType() {
		return (String) getValue(6);
	}

	/**
	 * Setter for <code>APP.MEETING.SECTION_ID</code>.
	 */
	public void setSectionId(Integer value) {
		setValue(7, value);
	}

	/**
	 * Getter for <code>APP.MEETING.SECTION_ID</code>.
	 */
	public Integer getSectionId() {
		return (Integer) getValue(7);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Record1<Integer> key() {
		return (Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record8 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, Integer, String, String, String, String, String, Integer> fieldsRow() {
		return (Row8) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Row8<Integer, Integer, String, String, String, String, String, Integer> valuesRow() {
		return (Row8) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field1() {
		return Meeting.MEETING.ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field2() {
		return Meeting.MEETING.DATE_TIME_BLOCK_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field3() {
		return Meeting.MEETING.CAMPUS;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field4() {
		return Meeting.MEETING.BUILDING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field5() {
		return Meeting.MEETING.ROOM;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field6() {
		return Meeting.MEETING.MEETING_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<String> field7() {
		return Meeting.MEETING.SCHEDULE_TYPE;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Field<Integer> field8() {
		return Meeting.MEETING.SECTION_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value1() {
		return getId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value2() {
		return getDateTimeBlockId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value3() {
		return getCampus();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value4() {
		return getBuilding();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value5() {
		return getRoom();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value6() {
		return getMeetingType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public String value7() {
		return getScheduleType();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Integer value8() {
		return getSectionId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeetingRecord value1(Integer value) {
		setId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeetingRecord value2(Integer value) {
		setDateTimeBlockId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeetingRecord value3(String value) {
		setCampus(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeetingRecord value4(String value) {
		setBuilding(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeetingRecord value5(String value) {
		setRoom(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeetingRecord value6(String value) {
		setMeetingType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeetingRecord value7(String value) {
		setScheduleType(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeetingRecord value8(Integer value) {
		setSectionId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public MeetingRecord values(Integer value1, Integer value2, String value3, String value4, String value5, String value6, String value7, Integer value8) {
		value1(value1);
		value2(value2);
		value3(value3);
		value4(value4);
		value5(value5);
		value6(value6);
		value7(value7);
		value8(value8);
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached MeetingRecord
	 */
	public MeetingRecord() {
		super(Meeting.MEETING);
	}

	/**
	 * Create a detached, initialised MeetingRecord
	 */
	public MeetingRecord(Integer id, Integer dateTimeBlockId, String campus, String building, String room, String meetingType, String scheduleType, Integer sectionId) {
		super(Meeting.MEETING);

		setValue(0, id);
		setValue(1, dateTimeBlockId);
		setValue(2, campus);
		setValue(3, building);
		setValue(4, room);
		setValue(5, meetingType);
		setValue(6, scheduleType);
		setValue(7, sectionId);
	}
}
