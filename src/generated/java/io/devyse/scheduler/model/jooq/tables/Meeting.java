/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables;


import io.devyse.scheduler.model.jooq.App;
import io.devyse.scheduler.model.jooq.Keys;
import io.devyse.scheduler.model.jooq.tables.records.MeetingRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Meeting extends TableImpl<MeetingRecord> {

	private static final long serialVersionUID = -1652606067;

	/**
	 * The reference instance of <code>APP.MEETING</code>
	 */
	public static final Meeting MEETING = new Meeting();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<MeetingRecord> getRecordType() {
		return MeetingRecord.class;
	}

	/**
	 * The column <code>APP.MEETING.ID</code>.
	 */
	public final TableField<MeetingRecord, Integer> ID = createField("ID", org.jooq.impl.SQLDataType.INTEGER.nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>APP.MEETING.DATE_TIME_BLOCK_ID</code>.
	 */
	public final TableField<MeetingRecord, Integer> DATE_TIME_BLOCK_ID = createField("DATE_TIME_BLOCK_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * The column <code>APP.MEETING.CAMPUS</code>.
	 */
	public final TableField<MeetingRecord, String> CAMPUS = createField("CAMPUS", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.MEETING.BUILDING</code>.
	 */
	public final TableField<MeetingRecord, String> BUILDING = createField("BUILDING", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.MEETING.ROOM</code>.
	 */
	public final TableField<MeetingRecord, String> ROOM = createField("ROOM", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.MEETING.MEETING_TYPE</code>.
	 */
	public final TableField<MeetingRecord, String> MEETING_TYPE = createField("MEETING_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.MEETING.SCHEDULE_TYPE</code>.
	 */
	public final TableField<MeetingRecord, String> SCHEDULE_TYPE = createField("SCHEDULE_TYPE", org.jooq.impl.SQLDataType.VARCHAR.length(255).defaulted(true), this, "");

	/**
	 * The column <code>APP.MEETING.SECTION_ID</code>.
	 */
	public final TableField<MeetingRecord, Integer> SECTION_ID = createField("SECTION_ID", org.jooq.impl.SQLDataType.INTEGER, this, "");

	/**
	 * Create a <code>APP.MEETING</code> table reference
	 */
	public Meeting() {
		this("MEETING", null);
	}

	/**
	 * Create an aliased <code>APP.MEETING</code> table reference
	 */
	public Meeting(String alias) {
		this(alias, MEETING);
	}

	private Meeting(String alias, Table<MeetingRecord> aliased) {
		this(alias, aliased, null);
	}

	private Meeting(String alias, Table<MeetingRecord> aliased, Field<?>[] parameters) {
		super(alias, App.APP, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<MeetingRecord, Integer> getIdentity() {
		return Keys.IDENTITY_MEETING;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<MeetingRecord> getPrimaryKey() {
		return Keys.MEETING_PKEY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<MeetingRecord>> getKeys() {
		return Arrays.<UniqueKey<MeetingRecord>>asList(Keys.MEETING_PKEY);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<ForeignKey<MeetingRecord, ?>> getReferences() {
		return Arrays.<ForeignKey<MeetingRecord, ?>>asList(Keys.MEETING_FKEY_DATE_TIME_BLOCK_ID, Keys.MEETING_FKEY_SECTION_ID);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Meeting as(String alias) {
		return new Meeting(alias, this);
	}

	/**
	 * Rename this table
	 */
	public Meeting rename(String name) {
		return new Meeting(name, null);
	}
}
