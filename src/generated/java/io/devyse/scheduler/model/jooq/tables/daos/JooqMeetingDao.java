/**
 * This class is generated by jOOQ
 */
package io.devyse.scheduler.model.jooq.tables.daos;


import io.devyse.scheduler.model.MeetingDao;
import io.devyse.scheduler.model.jooq.tables.Meeting;
import io.devyse.scheduler.model.jooq.tables.pojos.JooqMeeting;
import io.devyse.scheduler.model.jooq.tables.records.MeetingRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class JooqMeetingDao extends DAOImpl<MeetingRecord, JooqMeeting, Integer> implements MeetingDao {

	/**
	 * Create a new JooqMeetingDao without any configuration
	 */
	public JooqMeetingDao() {
		super(Meeting.MEETING, JooqMeeting.class);
	}

	/**
	 * Create a new JooqMeetingDao with an attached configuration
	 */
	public JooqMeetingDao(Configuration configuration) {
		super(Meeting.MEETING, JooqMeeting.class, configuration);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	protected Integer getId(JooqMeeting object) {
		return object.getId();
	}

	/**
	 * Fetch records that have <code>ID IN (values)</code>
	 */
	public List<JooqMeeting> fetchById(Integer... values) {
		return fetch(Meeting.MEETING.ID, values);
	}

	/**
	 * Fetch a unique record that has <code>ID = value</code>
	 */
	public JooqMeeting fetchOneById(Integer value) {
		return fetchOne(Meeting.MEETING.ID, value);
	}

	/**
	 * Fetch records that have <code>DATE_TIME_BLOCK_ID IN (values)</code>
	 */
	public List<JooqMeeting> fetchByDateTimeBlockId(Integer... values) {
		return fetch(Meeting.MEETING.DATE_TIME_BLOCK_ID, values);
	}

	/**
	 * Fetch records that have <code>CAMPUS IN (values)</code>
	 */
	public List<JooqMeeting> fetchByCampus(String... values) {
		return fetch(Meeting.MEETING.CAMPUS, values);
	}

	/**
	 * Fetch records that have <code>BUILDING IN (values)</code>
	 */
	public List<JooqMeeting> fetchByBuilding(String... values) {
		return fetch(Meeting.MEETING.BUILDING, values);
	}

	/**
	 * Fetch records that have <code>ROOM IN (values)</code>
	 */
	public List<JooqMeeting> fetchByRoom(String... values) {
		return fetch(Meeting.MEETING.ROOM, values);
	}

	/**
	 * Fetch records that have <code>MEETING_TYPE IN (values)</code>
	 */
	public List<JooqMeeting> fetchByMeetingType(String... values) {
		return fetch(Meeting.MEETING.MEETING_TYPE, values);
	}

	/**
	 * Fetch records that have <code>SCHEDULE_TYPE IN (values)</code>
	 */
	public List<JooqMeeting> fetchByScheduleType(String... values) {
		return fetch(Meeting.MEETING.SCHEDULE_TYPE, values);
	}

	/**
	 * Fetch records that have <code>SECTION_ID IN (values)</code>
	 */
	public List<JooqMeeting> fetchBySectionId(Integer... values) {
		return fetch(Meeting.MEETING.SECTION_ID, values);
	}
}
